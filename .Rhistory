#SEX RATIO IT IS 2015!!!!!! #man/women per 100
sex_ratio <- select(sex_ratio, "country", "2015")
colnames(sex_ratio) <- c("country", "sex_ratio_p100")
#CHILDREN MORTALITY
# 0-5 year olds dying per 1000 born
child_mortality <- select(child_mortality, "country", "2016")
colnames(child_mortality) <- c("country", "child_mort_p1000")
#INCOME PER PERSON
income_per_person <- select(income_per_person, "country", "2016")
colnames(income_per_person) <- c("country", "income_per_person")
#INVESTMENT AS A % OF DGP
investments_per_ofGDP <- select(investments_per_ofGDP, "country", "2016")
colnames(investments_per_ofGDP) <- c("country", "investments_per_ofGDP")
#GINI
gini <- select(gini, "country", "2016")
colnames(gini) <- c("country", "gini")
#Merge all
data <- merge(population_tot, murder_total_deaths, by="country", all = TRUE)
data <- merge(data, armed_forces_personnel_total , by="country", all = TRUE)
data <- merge(data, cell_phones , by="country", all = TRUE)
data <- merge(data, children_per_woman , by="country", all = TRUE)
data <- merge(data, life_expectancy_years , by="country", all = TRUE)
data <- merge(data, suicide_total_deaths , by="country", all = TRUE)
data <- merge(data, urban_population , by="country", all = TRUE)
data <- merge(data, sex_ratio , by="country", all = TRUE)
data <- merge(data, corruption , by="country", all = TRUE)
data <- merge(data, internet_users , by="country", all = TRUE)
data <- merge(data, child_mortality, by="country", all = TRUE)
data <- merge(data, income_per_person, by="country", all = TRUE)
data <- merge(data, investments_per_ofGDP, by= "country", all=TRUE)
data <- merge(data, gini, by="country", all=TRUE)
######## ######## ######## ######## ########
######## NEW COLUMN - CONTINENT ########
######## ######## ######## ######## ########
# Create new a column continent and divide countires by continent
library(countrycode)
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
# Just rearanage columns to get continent before country
data <- data[,c(ncol(data),seq(1,ncol(data)-1,by=1))]
#The function above did not divide coutries into America North, Central, South so I did this by hand
subset(data, continent=='Americas') %>% select(country) %>% as.list()
America_North <- c("Canada","United States","Mexico")
America_South <- c("Peru","Ecuador","Chile","Bolivia","Venezuela","Paraguay","Brazil",
"Colombia",  "Guyana", "Suriname", "Uruguay", "Argentina")
#Change the values from "Americas" into more specific part of America
for (i in 1:nrow(data)){
ifelse(data$continent[i] == "Americas",
ifelse(data$country[i] %in% America_North,data$continent[i] <- 'North America',
ifelse(data$country[i] %in% America_South,data$continent[i] <- 'South America',
data$continent[i] <- 'Central America')), data$country[i])
}
######## ######## ######## ######## ########
######## INSERT MEDIAN ########
######## ######## ######## ######## ########
for(q in 1:ncol(data)){
data[is.na(data[, q]), q] <- median(data[, q], na.rm = TRUE)
}
summary(data)
data2 <- data
library(dplyr)
colnames(data2)
data2 <- select(data, 'country', #'armed_pp',
'phones_p100','children_p_woman','life_exp_yrs','suicide_pp',
#'sex_ratio_p100',
'corruption_CPI','internet_%of_pop','child_mort_p1000','income_per_person','gini')
## Get data in onedirection
data2$suicide_pp <- max(data2$suicide_pp)-data2$suicide_pp
data2$child_mort_p1000 <- max(data2$child_mort_p1000)-data2$child_mort_p1000
data2$gini <- max(data2$gini) - data2$gini
#data <- data[,c(3:17)]
pca <- princomp(data2[,-1], cor=T)
summary(pca, loadings=T)
## PC1 can be high develope countries
# because not many children_p_woman, suicide is high
### REMEMBER suicide_pp, child_mort_p1000 and gini are REVERSED
## PC2 Arabic country:
#more inequality
# Suicide is very low
#gini is high (more inequality)
#Country with low comp2
biplot(pca,xlabs=abbreviate(data2$country))
text(pca, labels = abbreviate(data2$country))
biplot(pca,xlabs=abbreviate(data2$country))
pca
pca$scores
data2 <- data
library(dplyr)
colnames(data2)
data2 <- select(data,'continent', 'country', #'armed_pp',
'phones_p100','children_p_woman','life_exp_yrs','suicide_pp',
#'sex_ratio_p100',
'corruption_CPI','internet_%of_pop','child_mort_p1000','income_per_person','gini')
data2 <- data
library(dplyr)
colnames(data2)
data2 <- select(data,'continent', 'country', #'armed_pp',
'phones_p100','children_p_woman','life_exp_yrs','suicide_pp',
#'sex_ratio_p100',
'corruption_CPI','internet_%of_pop','child_mort_p1000','income_per_person','gini')
## Get data in onedirection
data2$suicide_pp <- max(data2$suicide_pp)-data2$suicide_pp
data2$child_mort_p1000 <- max(data2$child_mort_p1000)-data2$child_mort_p1000
data2$gini <- max(data2$gini) - data2$gini
#data <- data[,c(3:17)]
pca <- princomp(data2[,-1,-2], cor=T)
summary(pca, loadings=T)
pca
pca$scores
pca$scores[,1:2]
biplot(pca,xlabs=abbreviate(data2$continent))
biplot(pca,xlabs=col(data2$continent))
biplot(pca,col=abbreviate(data2$continent))
biplot(pca,col=(data2$continent))
data <- replicate(100, rnorm(100))
pca <- prcomp(data)
raw <- pca$x[,1:2]
plot(raw[,1], raw[,2], col=rainbow(nrow(raw)), pch=20)
biplot(pca,col=data2$continent)
biplot(pca,col=rainbow(nrow(raw)), pch=20)
biplot(pca,col=rainbow(data2$continent), pch=20)
biplot(pca,col=rainbow(data2$country), pch=20)
biplot(pca,col=data2$country, pch=20)
pca$x
#data <- data[,c(3:17)]
pca <- princomp(data2[,-1,-2], cor=T)
data2 <- data
library(dplyr)
colnames(data2)
data2 <- select(data,'continent', 'country', #'armed_pp',
'phones_p100','children_p_woman','life_exp_yrs','suicide_pp',
#'sex_ratio_p100',
'corruption_CPI','internet_%of_pop','child_mort_p1000','income_per_person','gini')
## Get data in onedirection
data2$suicide_pp <- max(data2$suicide_pp)-data2$suicide_pp
data2$child_mort_p1000 <- max(data2$child_mort_p1000)-data2$child_mort_p1000
data2$gini <- max(data2$gini) - data2$gini
#Read Libraries
library(readr)
library(readxl)
library(dplyr)
######## ######## ######## ######## ########
########## READ ALL DATA AND MERGE ##########
######## ######## ######## ######## ########
#Read data
population_tot <- read_csv("data/population_total.csv")
murder_total_deaths <- read_csv("data/murder_total_deaths edited.csv")
armed_forces_personnel_total <- read_csv("data/armed_forces_personnel_total.csv")
cell_phones <- read_csv("data/cell_phones_per_100_people.csv")
children_per_woman <- read_csv("data/children_per_woman_total_fertility.csv")
life_expectancy_years <- read_csv("data/life_expectancy_years.csv")
suicide_total_deaths <- read_csv("data/suicide_total_deaths.csv")
urban_population <- read_csv("data/urban_population.csv")
sex_ratio <- read_csv("data/sex_ratio_all_age_groups.csv")
corruption <- read_csv("data/corruption_perception_index_cpi.csv")
internet_users <- read_csv("data/internet_users.csv")
internet_users <- read_csv("data/internet_users.csv")
child_mortality <- read_csv("data/child_mortality_0_5_year_olds_dying_per_1000_born.csv")
income_per_person <- read_csv("data/income_per_person_gdppercapita_ppp_inflation_adjusted.csv")
investments_per_ofGDP <- read_csv("data/investments_percent_of_gdp.csv")
gini <- read_csv("data/gini.csv")
#####DATA#####
#POPULATION TOTAL
population_tot <- select(population_tot, "country", "2016")
colnames(population_tot) <- c("country", "pop_total")
#MURDER per person (from total)
murder_total_deaths <- select(murder_total_deaths, "Country", "2016")
colnames(murder_total_deaths) <- c("country", "murder_total")
murder_total_deaths <- merge(population_tot, murder_total_deaths , by="country", all = TRUE)
murder_total_deaths$divided <- murder_total_deaths$murder_total/murder_total_deaths$pop_total
murder_total_deaths <- select(murder_total_deaths,"country",'divided')
colnames(murder_total_deaths) <- c("country","murder_pp")
#ARMED per person (from total)
armed_forces_personnel_total <- select(armed_forces_personnel_total, "country", "2016")
colnames(armed_forces_personnel_total) <- c("country", "armed_total")
armed_forces_personnel_total <- merge(population_tot, armed_forces_personnel_total , by="country", all = TRUE)
armed_forces_personnel_total$divided <- armed_forces_personnel_total$armed_total/armed_forces_personnel_total$pop_total
armed_forces_personnel_total <- select(armed_forces_personnel_total,"country",'divided')
colnames(armed_forces_personnel_total) <- c("country","armed_pp")
#CELL PHONES per 100
cell_phones <- select(cell_phones, "country", "2016")
colnames(cell_phones) <- c("country", "phones_p100")
#URBAN POPULATION
urban_population<- select(urban_population, "country", "2016")
colnames(urban_population) <- c("country", "urban_pop_tot")
#CHILDREN PER WOMAN
children_per_woman <- select(children_per_woman, "country", "2016")
colnames(children_per_woman) <- c("country", "children_p_woman")
#LIFE EXPECTANCY
life_expectancy_years <- select(life_expectancy_years, "country", "2016")
colnames(life_expectancy_years) <- c("country", "life_exp_yrs")
#SUICIDE DEATHS TOTAL
suicide_total_deaths <- select(suicide_total_deaths, "country", "2016")
colnames(suicide_total_deaths) <- c("country", "suicide_total")
suicide_total_deaths <- merge(population_tot, suicide_total_deaths , by="country", all = TRUE)
suicide_total_deaths$divided <- suicide_total_deaths$suicide_total/suicide_total_deaths$pop_total
suicide_total_deaths <- select(suicide_total_deaths,"country",'divided')
colnames(suicide_total_deaths) <- c("country","suicide_pp")
#CORRUPTION
corruption <- select(corruption, "country", "2016")
colnames(corruption) <- c("country", "corruption_CPI")
#INTERNET USERS (%of pop)
internet_users <- select(internet_users, "country", "2016")
colnames(internet_users) <- c("country", "internet_%of_pop")
#SEX RATIO IT IS 2015!!!!!! #man/women per 100
sex_ratio <- select(sex_ratio, "country", "2015")
colnames(sex_ratio) <- c("country", "sex_ratio_p100")
#CHILDREN MORTALITY
# 0-5 year olds dying per 1000 born
child_mortality <- select(child_mortality, "country", "2016")
colnames(child_mortality) <- c("country", "child_mort_p1000")
#INCOME PER PERSON
income_per_person <- select(income_per_person, "country", "2016")
colnames(income_per_person) <- c("country", "income_per_person")
#INVESTMENT AS A % OF DGP
investments_per_ofGDP <- select(investments_per_ofGDP, "country", "2016")
colnames(investments_per_ofGDP) <- c("country", "investments_per_ofGDP")
#GINI
gini <- select(gini, "country", "2016")
colnames(gini) <- c("country", "gini")
#Merge all
data <- merge(population_tot, murder_total_deaths, by="country", all = TRUE)
data <- merge(data, armed_forces_personnel_total , by="country", all = TRUE)
data <- merge(data, cell_phones , by="country", all = TRUE)
data <- merge(data, children_per_woman , by="country", all = TRUE)
data <- merge(data, life_expectancy_years , by="country", all = TRUE)
data <- merge(data, suicide_total_deaths , by="country", all = TRUE)
data <- merge(data, urban_population , by="country", all = TRUE)
data <- merge(data, sex_ratio , by="country", all = TRUE)
data <- merge(data, corruption , by="country", all = TRUE)
data <- merge(data, internet_users , by="country", all = TRUE)
data <- merge(data, child_mortality, by="country", all = TRUE)
data <- merge(data, income_per_person, by="country", all = TRUE)
data <- merge(data, investments_per_ofGDP, by= "country", all=TRUE)
data <- merge(data, gini, by="country", all=TRUE)
######## ######## ######## ######## ########
######## NEW COLUMN - CONTINENT ########
######## ######## ######## ######## ########
# Create new a column continent and divide countires by continent
library(countrycode)
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
# Just rearanage columns to get continent before country
data <- data[,c(ncol(data),seq(1,ncol(data)-1,by=1))]
#The function above did not divide coutries into America North, Central, South so I did this by hand
subset(data, continent=='Americas') %>% select(country) %>% as.list()
America_North <- c("Canada","United States","Mexico")
America_South <- c("Peru","Ecuador","Chile","Bolivia","Venezuela","Paraguay","Brazil",
"Colombia",  "Guyana", "Suriname", "Uruguay", "Argentina")
#Change the values from "Americas" into more specific part of America
for (i in 1:nrow(data)){
ifelse(data$continent[i] == "Americas",
ifelse(data$country[i] %in% America_North,data$continent[i] <- 'North America',
ifelse(data$country[i] %in% America_South,data$continent[i] <- 'South America',
data$continent[i] <- 'Central America')), data$country[i])
}
######## ######## ######## ######## ########
######## INSERT MEDIAN ########
######## ######## ######## ######## ########
for(q in 1:ncol(data)){
data[is.na(data[, q]), q] <- median(data[, q], na.rm = TRUE)
}
summary(data)
data2 <- data
library(dplyr)
colnames(data2)
data2 <- select(data,'continent', 'country', #'armed_pp',
'phones_p100','children_p_woman','life_exp_yrs','suicide_pp',
#'sex_ratio_p100',
'corruption_CPI','internet_%of_pop','child_mort_p1000','income_per_person','gini')
## Get data in onedirection
data2$suicide_pp <- max(data2$suicide_pp)-data2$suicide_pp
data2$child_mort_p1000 <- max(data2$child_mort_p1000)-data2$child_mort_p1000
data2$gini <- max(data2$gini) - data2$gini
data2
#data <- data[,c(3:17)]
pca <- princomp(data2, cor=T)
#data <- data[,c(3:17)]
pca <- princomp(data2[,-1,-2], cor=T)
#data <- data[,c(3:17)]
pca <- princomp(data2[,c(-1,-2)], cor=T)
summary(pca, loadings=T)
pca$scores
data2[,1]
## I wanna rownames as country
rownames(data2) <- data2[,1]
## I wanna rownames as country
rownames(data2) <- data2[,2]
data2
pca$scores
pca$scores[,1:2]
View(data2)
pca$scores
## shot put, long jump, 100m, high jump, javelin
data("heptathlon",package="HSAUR2")
## Want to score everything in same direction
## Have to reverse the values of some events
heptathlon$hurdles <- max(heptathlon$hurdles)-heptathlon$hurdles
## Want to score everything in same direction
## Have to reverse the values of some events
heptathlon$hurdles <- max(heptathlon$hurdles)-heptathlon$hurdles
heptathlon$run200m <- max(heptathlon$run200m)-heptathlon$run200m
heptathlon$run800m <- max(heptathlon$run800m)-heptathlon$run800m
## Want to score everything in same direction
## Have to reverse the values of some events
heptathlon$hurdles <- max(heptathlon$hurdles)-heptathlon$hurdles
heptathlon$run200m <- max(heptathlon$run200m)-heptathlon$run200m
heptathlon$run800m <- max(heptathlon$run800m)-heptathlon$run800m
head(heptathlon)
# exclude the score variable
mydata <- heptathlon
mydata$score <- NULL
plot(mydata)
mydata
# plot one of the pair variables for finding the outlier
plot(hurdles ~ highjump, data = mydata,
cex.lab = 0.7,
xlab = "Highjump",
ylab = "Hardles")
# adds text to plot
text(hurdles ~ highjump, data = mydata,
labels=(row.names(mydata)))
x <- mydata[, c("highjump", "hurdles")]
library(MVA)
bvbox(x, add = T)
# Now extract principal components from correlation matrix
heptathlon_pca <- princomp(mydata.cln, cor = T)
# Remove PNG from list
outlier <- match(lab <- c("Launa (PNG)"), rownames(mydata))
mydata.cln <- mydata [-outlier, ]
# change options to show only two decimal points
options(digits = 2)
# Now extract principal components from correlation matrix
heptathlon_pca <- princomp(mydata.cln, cor = T)
summary(heptathlon_pca, loading = T)
mydata.cln
heptathlon_pca$scores[,1:2]
mydata.cln
pca$scores
data2$continent == 'Africa'
filter(data2, continent == 'Africa')
subset(data2, continent == 'Africa')
which(data2[,1] == 'Africa'
which(data2[,1] == 'Africa')
which(data2[,1] == Africa)
which(data2[,1] == 'Africa')
table(data2$continent)
row.names(pca$scores)
pca$scores
class(pca$)
class(pca$scores)
pca$scores[row,]
rows <- pca$scores
rows
rows[row,]
rownames(pca)
rownames(rows)
rows
rows <- as.data.frame(rows)
rows
rownames(rows)
pc_scores <- as.data.frame(rows)
pc_scores(rows)
pc_scores(rows)
pc_scores
rownames(pc_scores)
index_africa
index_africa <- which(data2[,1] == 'Africa')
index_africa
pc_scores
match(index_africa,pc_scores)
index_africa
as.data.frame(index_africa)
pc_scores
index_africa <- as.data.frame(index_africa)
index_africa
rows
pc_scores
setDT(pc_scores, keep.rownames = "row_index")
library(data.table)
setDT(pc_scores, keep.rownames = "row_index")
pc_scores
pc_scores
#merge
merge(pc_scores, index_africa , by=c('pc_scores','index_africa'), all = TRUE)
pc_scores
index_africa
#merge
merge(pc_scores, index_africa ,  by.pc_scores = "row_index", by.index_africa = "index_africa", all = TRUE)
#merge
merge.data.frame(pc_scores, index_africa ,  by.pc_scores = "row_index", by.index_africa = "index_africa", all = TRUE)
index_africa
#merge
merge.data.frame(x=pc_scores, y=index_africa ,  by.pc_scores = "row_index", by.index_africa = "index_africa", all.y = TRUE)
index_africa
#merge
merge.data.frame(x=pc_scores, y=index_africa ,  by.pc_scores = "row_index", by.index_africa = "index_africa", all.x = TRUE)
index_africa
pc_scores
index_africa
subset(pc_scores, pc_scores$row_index %in% index_africa$index_africa)
Africa_scores <- subset(pc_scores, pc_scores$row_index %in% index_africa$index_africa)
biplot(Africa_scores,xlabs=abbreviate(data2$country))
biplot(Africa_scores,xlabs=abbreviate(data2$country))
biplot(Africa_scores)
Africa_scores
biplot(Africa_scores[,1:2])
pca
Africa_scores[,1:2]
biplot(Africa_scores[,2:3])
Africa_scores[,2:3]
plot(Africa_scores[,2:3])
biplt(pca)
biplot(pca)
biplot(pca)
biplot(pca)
pca
biplot(pca,xlabs=abbreviate(data2$continent))
biplot(pca,xlabs=abbreviate(data2$country))
filter(data, continent == "Africa")
Africa <- filter(data, continent == "Africa")
biplot(pca,xlabs=abbreviate(Africa$country))
Africa <- data2
Africa
f <- function(Africa) {
if(Africa$continent == "Africa", "Africa", "")
}
f <- function(Africa) {
ifelse(Africa$continent == "Africa", "Africa", "")
}
apply(Africa, 1, f)
Africa$continent == "Africa"
f <- function(Africa) {
ifelse(Africa$continent == "Africa", 1, 0)
}
apply(Africa, 1, f)
Africa
Africa
apply(Africa, 1, f)
f <- function(Africa) {
ifelse(Africa$continent == "Africa", 1, 0)
}
apply(Africa, 1, f)
Africa$continent<-apply(Africa,1,function(x)
ifelse(Africa$continent == "Africa", 1, 0)
Africa
Africa$continent<-apply(Africa,1,function(x)
ifelse(Africa$continent == "Africa", 1, 0))
Africa
Africa$continent
Africa <- data2
Africa$new<-apply(Africa,1,function(x)
ifelse(Africa$continent == "Africa", 1, 0))
Africa
Africa <- data2
Africa
Africa$new<-apply(Africa$continent,1,function(x)
ifelse(Africa$continent == "Africa", 1, 0))
ifelse(Africa$continent == "Africa", 1, 0)
apply(Africa,1,function(x)
ifelse(Africa$continent == "Africa", 1, 0))
Africa <- data2[,c(1,2)]
Africa
apply(Africa,1,function(x)
ifelse(Africa$continent == "Africa", 1, 0))
Africa
Africa$continent <- apply(Africa,1,function(x)
ifelse(Africa$continent == "Africa", 1, 0))
Africa
Africa
View(Africa)
Africa <- data2[,c(1,2)]
Africa$continent <- apply(Africa,1,function(x)
ifelse(Africa$continent == "Africa", "Africa", ""))
View(Africa)
biplot(pca,xlabs=abbreviate(Africa$country))
biplot(pca,xlabs=abbreviate(Africa$country))
Africa$country
View(Africa)
biplot(pca,xlabs=abbreviate(Africa$continent))
Africa$continent
biplot(pca,xlabs=abbreviate(Africa$continent))
dim(Africa$continent)
length(Africa$continent)
Africa$continent
View(Africa)
biplot(pca,xlabs=abbreviate(Africa$continent))
biplot(pca,xlabs=abbreviate(Africa$country))
biplot(pca,xlabs=abbreviate(Africa$continent))
sample(x = 1:5, size = 10)
data.frame(replicate(10,sample(0:1,1000,rep=TRUE)))
data.frame(replicate(10,sample(0:10,100,rep=TRUE)))
data.frame(replicate(10,sample(0:10,20,rep=TRUE)))
iris
data <- iris
pca(data, cor = T)
princomp(data, cor = T)
princomp(data, cor = T)
princomp(data[,c(1:4)], cor = T)
pca <- princomp(data[,c(1:4)], cor = T)
biplot(pca,)
biplot(pca)
biplot(pca,xlabs=abbreviate(data$Species))
iris
data <- iris
pca(data[,c(1:4)])
pca <- princomp(data[,c(1:4)])
biplot(pca)
#Make a biplot
biplot(pca,xlabs=abbreviate(data$Species))
