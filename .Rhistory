cmd <- cmdscale(d, k=5, eig = T)
cumsum(cmd$eig[1:5])/sum(cmd$eig[1:5])
cmd <- cmdscale(d, k=3)
library(scatterplot3d)
s3d <- scatterplot3d(cmd, pch=16, cex.axis = 1)
text(cmd, data2[141,2])
sort(cmd[,1])
#-4.8519829   0.424043837  7.117520923
#texts3d(x=-4.8519829, y = 0.424043837, z = 7.117520923)
rgl.texts(x=-4.8519829, y = 0.424043837, z = 7.117520923)
#apply MDS to all data
data.s <- scale(data[, c(-1,-2)])
d <- dist(data.s)
cmd <- cmdscale(d, k=5, eig = T)
cumsum(cmd$eig[1:5])/sum(cmd$eig[1:5])
cmd <- cmdscale(d, k=3)
library(scatterplot3d)
s3d <- scatterplot3d(cmd, pch=16, cex.axis = 1)
text(cmd, data2[141,2])
sort(cmd[,1])
#-4.8519829   0.424043837  7.117520923
#texts3d(x=-4.8519829, y = 0.424043837, z = 7.117520923)
rgl.texts(x=-4.8519829, y = 0.424043837, z = 7.117520923, 'Quatar')
#apply MDS to all data
data.s <- scale(data[, c(-1,-2)])
d <- dist(data.s)
cmd <- cmdscale(d, k=5, eig = T)
cumsum(cmd$eig[1:5])/sum(cmd$eig[1:5])
cmd <- cmdscale(d, k=3)
library(scatterplot3d)
s3d <- scatterplot3d(cmd, pch=16, cex.axis = 1)
text(cmd, data2[141,2])
sort(cmd[,1])
#-4.8519829   0.424043837  7.117520923
texts3d(x=-4.8519829, y = 0.424043837, z = 7.117520923,'Quatar')
#apply MDS to all data
data.s <- scale(data[, c(-1,-2)])
d <- dist(data.s)
cmd <- cmdscale(d, k=5, eig = T)
cumsum(cmd$eig[1:5])/sum(cmd$eig[1:5])
cmd <- cmdscale(d, k=3)
library(scatterplot3d)
s3d <- scatterplot3d(cmd, pch=16, cex.axis = 1)
text(cmd, data2[141,2])
sort(cmd[,1])
#-4.8519829   0.424043837  7.117520923
texts3d(x=-4.8519829, y = 0.424043837, z = 7.117520923,'Quatar')
#apply MDS to all data
data.s <- scale(data[, c(-1,-2)])
d <- dist(data.s)
cmd <- cmdscale(d, k=5, eig = T)
cumsum(cmd$eig[1:5])/sum(cmd$eig[1:5])
cmd <- cmdscale(d, k=3)
library(scatterplot3d)
s3d <- scatterplot3d(cmd, pch=16, cex.axis = 1)
text(cmd, data2[141,2])
sort(cmd[,1])
#-4.8519829   0.424043837  7.117520923
texts3d(x=-4.8519829, y = 0.424043837, z = 7.117520923,'Quatar')
sort(cmd[,1])
#apply MDS to all data
data.s <- scale(data[, c(-1,-2)])
d <- dist(data.s)
cmd <- cmdscale(d, k=5, eig = T)
cumsum(cmd$eig[1:5])/sum(cmd$eig[1:5])
cmd <- cmdscale(d, k=3)
library(scatterplot3d)
s3d <- scatterplot3d(cmd, pch=16, cex.axis = 1)
colors <- c("#999999", "#E69F00", "#56B4E9", "#483D8B", "#8B0000", "#C71585", "#3CB371")
#True clusters: continents
colors_data <- colors[as.numeric(factor(data$continent))]
s3d <- scatterplot3d(cmd, pch=16, cex.axis = 1, color = colors_data)
legend(3.9,6.1, fill=colors, legend=levels(factor(data$continent)), col=colors, cex=0.8)
#group by continent and apply MDS
by_continent <- aggregate(data[, 3:17], list(data$continent), mean)
cmd_continent <- cmdscale(dist(scale(by_continent[, c(-1,-2)])), k=5, eig = T)
cumsum(cmd_continent$eig[1:5])/sum(cmd_continent$eig[1:5])
cmd_continent <- cmdscale(dist(scale(by_continent[, c(-1,-2)])), k=2)
plot(cmd_continent, xlab = "coordinate 1", ylab = "coordinate 2", pch=16, col=colors)
legend(-2.5, -1, fill=colors, legend=by_continent$Group.1, col=colors, cex=0.8)
## Qatar is yellow on the top.
sort(cmd[,1])
View(data)
cmd[,1]
cmd
## Qatar is yellow on the top.
sort(cmd[,1])
cmd
## Qatar is yellow on the top.
sort(cmd[,3])
## Qatar is yellow on the top.
sort(cmd[,2])
## Qatar is yellow on the top.
sort(cmd[,3])
View(data)
#Read Libraries
library(readr)
library(readxl)
library(dplyr)
######## ######## ######## ######## ########
########## READ ALL DATA AND MERGE ##########
######## ######## ######## ######## ########
#Read data
population_tot <- read_csv("data/population_total.csv")
murder_total_deaths <- read_csv("data/murder_total_deaths edited.csv")
armed_forces_personnel_total <- read_csv("data/armed_forces_personnel_total.csv")
cell_phones <- read_csv("data/cell_phones_per_100_people.csv")
children_per_woman <- read_csv("data/children_per_woman_total_fertility.csv")
life_expectancy_years <- read_csv("data/life_expectancy_years.csv")
suicide_total_deaths <- read_csv("data/suicide_total_deaths.csv")
urban_population <- read_csv("data/urban_population.csv")
sex_ratio <- read_csv("data/sex_ratio_all_age_groups.csv")
corruption <- read_csv("data/corruption_perception_index_cpi.csv")
internet_users <- read_csv("data/internet_users.csv")
internet_users <- read_csv("data/internet_users.csv")
child_mortality <- read_csv("data/child_mortality_0_5_year_olds_dying_per_1000_born.csv")
income_per_person <- read_csv("data/income_per_person_gdppercapita_ppp_inflation_adjusted.csv")
investments_per_ofGDP <- read_csv("data/investments_percent_of_gdp.csv")
gini <- read_csv("data/gini.csv")
#####DATA#####
#POPULATION TOTAL
population_tot <- select(population_tot, "country", "2016")
colnames(population_tot) <- c("country", "pop_total")
#MURDER per person (from total)
murder_total_deaths <- select(murder_total_deaths, "Country", "2016")
colnames(murder_total_deaths) <- c("country", "murder_total")
murder_total_deaths <- merge(population_tot, murder_total_deaths , by="country", all = TRUE)
murder_total_deaths$divided <- murder_total_deaths$murder_total/murder_total_deaths$pop_total
murder_total_deaths <- select(murder_total_deaths,"country",'divided')
colnames(murder_total_deaths) <- c("country","murder_pp")
#ARMED per person (from total)
armed_forces_personnel_total <- select(armed_forces_personnel_total, "country", "2016")
colnames(armed_forces_personnel_total) <- c("country", "armed_total")
armed_forces_personnel_total <- merge(population_tot, armed_forces_personnel_total , by="country", all = TRUE)
armed_forces_personnel_total$divided <- armed_forces_personnel_total$armed_total/armed_forces_personnel_total$pop_total
armed_forces_personnel_total <- select(armed_forces_personnel_total,"country",'divided')
colnames(armed_forces_personnel_total) <- c("country","armed_pp")
#CELL PHONES per 100
cell_phones <- select(cell_phones, "country", "2016")
colnames(cell_phones) <- c("country", "phones_p100")
#URBAN POPULATION
urban_population<- select(urban_population, "country", "2016")
colnames(urban_population) <- c("country", "urban_pop_tot")
#CHILDREN PER WOMAN
children_per_woman <- select(children_per_woman, "country", "2016")
colnames(children_per_woman) <- c("country", "children_p_woman")
#LIFE EXPECTANCY
life_expectancy_years <- select(life_expectancy_years, "country", "2016")
colnames(life_expectancy_years) <- c("country", "life_exp_yrs")
#SUICIDE DEATHS TOTAL
suicide_total_deaths <- select(suicide_total_deaths, "country", "2016")
colnames(suicide_total_deaths) <- c("country", "suicide_total")
suicide_total_deaths <- merge(population_tot, suicide_total_deaths , by="country", all = TRUE)
suicide_total_deaths$divided <- suicide_total_deaths$suicide_total/suicide_total_deaths$pop_total
suicide_total_deaths <- select(suicide_total_deaths,"country",'divided')
colnames(suicide_total_deaths) <- c("country","suicide_pp")
#CORRUPTION
corruption <- select(corruption, "country", "2016")
colnames(corruption) <- c("country", "corruption_CPI")
#INTERNET USERS (%of pop)
internet_users <- select(internet_users, "country", "2016")
colnames(internet_users) <- c("country", "internet_%of_pop")
#SEX RATIO IT IS 2015!!!!!! #man/women per 100
sex_ratio <- select(sex_ratio, "country", "2015")
colnames(sex_ratio) <- c("country", "sex_ratio_p100")
#CHILDREN MORTALITY
# 0-5 year olds dying per 1000 born
child_mortality <- select(child_mortality, "country", "2016")
colnames(child_mortality) <- c("country", "child_mort_p1000")
#INCOME PER PERSON
income_per_person <- select(income_per_person, "country", "2016")
colnames(income_per_person) <- c("country", "income_per_person")
#INVESTMENT AS A % OF DGP
investments_per_ofGDP <- select(investments_per_ofGDP, "country", "2016")
colnames(investments_per_ofGDP) <- c("country", "investments_per_ofGDP")
#GINI
gini <- select(gini, "country", "2016")
colnames(gini) <- c("country", "gini")
#Merge all
data <- merge(population_tot, murder_total_deaths, by="country", all = TRUE)
data <- merge(data, armed_forces_personnel_total , by="country", all = TRUE)
data <- merge(data, cell_phones , by="country", all = TRUE)
data <- merge(data, children_per_woman , by="country", all = TRUE)
data <- merge(data, life_expectancy_years , by="country", all = TRUE)
data <- merge(data, suicide_total_deaths , by="country", all = TRUE)
data <- merge(data, urban_population , by="country", all = TRUE)
data <- merge(data, sex_ratio , by="country", all = TRUE)
data <- merge(data, corruption , by="country", all = TRUE)
data <- merge(data, internet_users , by="country", all = TRUE)
data <- merge(data, child_mortality, by="country", all = TRUE)
data <- merge(data, income_per_person, by="country", all = TRUE)
data <- merge(data, investments_per_ofGDP, by= "country", all=TRUE)
data <- merge(data, gini, by="country", all=TRUE)
######## ######## ######## ######## ########
######## NEW COLUMN - CONTINENT ########
######## ######## ######## ######## ########
# Create new a column continent and divide countires by continent
library(countrycode)
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
# Just rearanage columns to get continent before country
data <- data[,c(ncol(data),seq(1,ncol(data)-1,by=1))]
#The function above did not divide coutries into America North, Central, South so I did this by hand
subset(data, continent=='Americas') %>% select(country) %>% as.list()
America_North <- c("Canada","United States","Mexico")
America_South <- c("Peru","Ecuador","Chile","Bolivia","Venezuela","Paraguay","Brazil",
"Colombia",  "Guyana", "Suriname", "Uruguay", "Argentina")
#Change the values from "Americas" into more specific part of America
for (i in 1:nrow(data)){
ifelse(data$continent[i] == "Americas",
ifelse(data$country[i] %in% America_North,data$continent[i] <- 'North America',
ifelse(data$country[i] %in% America_South,data$continent[i] <- 'South America',
data$continent[i] <- 'Central America')), data$country[i])
}
######## ######## ######## ######## ########
######## INSERT MEDIAN ########
######## ######## ######## ######## ########
for(q in 1:ncol(data)){
data[is.na(data[, q]), q] <- median(data[, q], na.rm = TRUE)
}
data_clus <- data
data_clus
cor(data_clus)
1-cor(data_clus)
aggregate(. ~ continent, data=data_clus, FUN=median)
data_clus[,-2] <- data
data_clus<- data_clus[,-2]
data_clus
aggregate(. ~ continent, data=data_clus, FUN=median)
data_clus
data_clus[,-2]
data_clus
data_clus <- data_clus[,-2]
View(data_clus)
aggregate(. ~ continent, data=data_clus, FUN=median)
grouped_by_con <- aggregate(. ~ continent, data=data_clus, FUN=median)
cor(grouped_by_con)
cor(grouped_by_con[,-1])
1-cor(grouped_by_con[,-1])
grouped_by_con
t(grouped_by_con)
grouped_by_con
data_clus
data
data_clus
max(data_clus[,6])
data_clus <-  data
max(data_clus[,6])
data_clus
max(data[,8])
data_clus <-  data
max(data_clus[,8])
data_clus <- data_clus[,-2]
grouped_by_con <- aggregate(. ~ continent, data=data_clus, FUN=median)
grouped_by_con
cor(grouped_by_con[,-1])
t(grouped_by_con)
cor(t(grouped_by_con))
test <- cor(t(grouped_by_con))
test <- t(grouped_by_con)
test.as.dataframe
as.dataframe(test.)
as.dataframe(test)
as.data.frame(test)
as.data.frame(test, col.names='as')
as.data.frame(test, col.names='as')
as.data.frame(test, col.names=continent)
or(as.data.frame(test, col.names=continent))
cor(as.data.frame(test, col.names=continent))
as.data.frame(test, col.names=continent
as.data.frame(test)
as.data.frame(test)
df1 <- as.data.frame(test)
View(df1)
colnames(df1) = df1[1, ] # the first row will be the header
df1
View(df1)
data_clus <-  data
data_clus <- data_clus[,-2]
grouped_by_con <- aggregate(. ~ continent, data=data_clus, FUN=median)
test <- t(grouped_by_con)
test
data_clus <-  data
data_clus
data_clus <- data_clus[,-2]
grouped_by_con <- aggregate(. ~ continent, data=data_clus, FUN=median)
grouped_by_con
t(grouped_by_con)
grouped_by_con
t(grouped_by_con)
test
test
grouped_by_con
myDF <- cbind(Row.Names = rownames(grouped_by_con), grouped_by_con)
myDF
myDF <- cbind(Row.Names = rownames(grouped_by_con$continent), grouped_by_con)
rownames(grouped_by_con$continent)
grouped_by_con$continent
rownames(grouped_by_con)
View(myDF)
grouped_by_con <- cbind(continent = rownames(grouped_by_con), grouped_by_con)
grouped_by_con
grouped_by_con <- cbind(continent = rownames(grouped_by_con$continent), grouped_by_con)
grouped_by_con <- cbind(continent = rownames(grouped_by_con[,1]), grouped_by_con)
grouped_by_con
data_clus <-  data
data_clus <- data_clus[,-2]
grouped_by_con <- aggregate(. ~ continent, data=data_clus, FUN=median)
#cor(grouped_by_con[,-1])
row.names(grouped_by_con) <- grouped_by_con$continent
grouped_by_con
grouped_by_con[1] <- NULL
grouped_by_con
t(grouped_by_con)
cor(test)
test
grouped_by_con
t(grouped_by_con)
#cor(grouped_by_con[,-1])
test <- t(grouped_by_con)
View(test)
cor(test)
dist(test)
test
cor(test)
1-cor(test)
distance <- 1-cor(test)
distance
class(distance)
hc <- hclust(distance, "single")
distance <- as.dist(distance)
class(distance)
hc <- hclust(distance, "single")
plot(hc)
hc <- hclust(distance, "average")
plot(hc)
hc <- hclust(distance, "complete")
plot(hc)
#Make cluster
hc <- hclust(distance, "single", )
plot(hc)
#Make cluster
hc <- hclust(distance, "complete" )
plot(hc)
#Make cluster
hc <- hclust(distance, "average" )
plot(hc)
#Make cluster
hc <- hclust(distance, "single" )
plot(hc)
#Make cluster
hc <- hclust(distance, "single", main="Distance between Continents" )
plot(hc)
plot(hc, main="Distance between Continents")
plot(as.phylo(hc), type = "unrooted", cex = 0.6,
no.margin = TRUE)
install.packages("ape")
library(ape)
plot(as.phylo(hc), type = "unrooted", cex = 0.6,
no.margin = TRUE)
plot(as.phylo(hc), type = "fan")
plot(as.phylo(hc), type = "cladogram", cex = 0.6,
edge.color = "steelblue", edge.width = 2, edge.lty = 2,
tip.color = "steelblue")
library(ggplot2)
ggplot(ggd1, theme = theme_minimal())
library(ggplot2)
ggplot(hc, theme = theme_minimal())
library(ape)
plot(as.phylo(hc), type = "unrooted", cex = 0.6,
no.margin = TRUE)
plot(as.phylo(hc), type = "fan")
plot(as.phylo(hc), type = "cladogram", cex = 0.6,
edge.color = "steelblue", edge.width = 2, edge.lty = 2,
tip.color = "steelblue")
plot(as.phylo(hc), type = "unrooted", cex = 0.6,
no.margin = TRUE)
no.margin = TRUE)
library(ape)
plot(as.phylo(hc), type = "unrooted", cex = 2,
no.margin = TRUE)
library(ape)
plot(as.phylo(hc), type = "unrooted", cex = 1,
no.margin = TRUE)
plot(as.phylo(hc), type = "cladogram", cex = 0.6,
edge.color = "steelblue", edge.width = 2, edge.lty = 2,
tip.color = "steelblue")
plot(as.phylo(hc), type = "cladogram", cex = 1,
edge.color = "steelblue", edge.width = 2, edge.lty = 2,
tip.color = "steelblue")
plot(as.phylo(hc), type = "cladogram", cex = 1,
edge.color = "steelblue", edge.width = 2, edge.lty = 2,
tip.color = "steelblue", main="Distance between Continents")
plot(as.phylo(hc), type = "cladogram", cex = 0.8,
edge.color = "steelblue", edge.width = 2, edge.lty = 2,
tip.color = "steelblue", main="Distance between Continents")
plot(as.phylo(hc), type = "cladogram", cex = 0.8,
edge.color = "black", edge.width = 2, edge.lty = 2,
tip.color = "steelblue", main="Distance between Continents")
plot(as.phylo(hc), type = "cladogram", cex = 0.8,
edge.color = "steelblue", edge.width = 2, edge.lty = 2,
tip.color = "black", main="Distance between Continents")
plot(as.phylo(hc), type = "cladogram", cex = 0.8,
edge.color = "steelblue", edge.width = 2, edge.lty = 2,
tip.color = "steelblue", main="Distance between Continents")
plot(as.phylo(hc), type = "cladogram", cex = 0.8,
edge.color = "steelblue", edge.width = 2, edge.lty = 3,
tip.color = "steelblue")
plot(as.phylo(hc), type = "cladogram", cex = 0.8,
edge.color = "steelblue", edge.width = 2, edge.lty = 1,
tip.color = "steelblue")
plot(as.phylo(hc), type = "cladogram", cex = 0.8,
edge.color = "steelblue", edge.width = 2, edge.lty = 2,
tip.color = "steelblue")
plot(as.phylo(hc), type = "fan")
plot(as.phylo(hc), type = "unrooted", cex = 1,
no.margin = TRUE)
#apply MDS to all data
data.s <- scale(data[, c(-1,-2)])
d <- dist(data.s)
cmd <- cmdscale(d, k=5, eig = T)
cumsum(cmd$eig[1:5])/sum(cmd$eig[1:5])
cmd <- cmdscale(d, k=3)
library(scatterplot3d)
s3d <- scatterplot3d(cmd, pch=16, cex.axis = 1)
s3d.coords <- s3d$xyz.convert(cmd)
text(s3d.coords$x[141], s3d.coords$y[141],           # x and y coordinates
labels=data$country[141],               # text to plot
cex=.5, pos=4)
colors <- c("#999999", "#E69F00", "#56B4E9", "#483D8B", "#8B0000", "#C71585", "#3CB371")
#True clusters: continents
colors_data <- colors[as.numeric(factor(data$continent))]
s3d <- scatterplot3d(cmd, pch=16, cex.axis = 1, color = colors_data)
legend(3.9,6.1, fill=colors, legend=levels(factor(data$continent)), col=colors, cex=0.8)
#group by continent and apply MDS
by_continent <- aggregate(data[, 3:17], list(data$continent), mean)
cmd_continent <- cmdscale(dist(scale(by_continent[, c(-1,-2)])), k=5, eig = T)
cumsum(cmd_continent$eig[1:5])/sum(cmd_continent$eig[1:5])
cmd_continent <- cmdscale(dist(scale(by_continent[, c(-1,-2)])), k=2)
plot(cmd_continent, xlab = "coordinate 1", ylab = "coordinate 2", pch=16, col=colors)
legend(-2.5, -1, fill=colors, legend=by_continent$Group.1, col=colors, cex=0.8)
data_clus <-  data
data_clus <- data_clus[,-2]
#Take median for each continent for each column
grouped_by_con <- aggregate(. ~ continent, data=data_clus, FUN=mean)
#Note: median for each continent was taken! This is probably why
#transpose
test <- t(grouped_by_con)
#Make a distance matrix
distance <- 1-cor(test)
class(distance)
distance <- as.dist(distance)
#Make cluster
#1
hc <- hclust(distance, "single")
plot(hc, main="Distance between Continents")
#2
library(ape)
plot(as.phylo(hc), type = "unrooted", cex = 1,
no.margin = TRUE)
plot(as.phylo(hc), type = "cladogram", cex = 0.8,
edge.color = "steelblue", edge.width = 2, edge.lty = 2,
tip.color = "steelblue")
grouped_by_con <- aggregate(. ~ continent, data=data_clus, FUN=mean)
test <- t(grouped_by_con)
#Make a distance matrix
distance <- 1-cor(test)
class(distance)
distance <- as.dist(distance)
#Make cluster
#1
hc <- hclust(distance, "single")
plot(hc, main="Distance between Continents")
#2
library(ape)
plot(as.phylo(hc), type = "unrooted", cex = 1,
no.margin = TRUE)
#3
plot(as.phylo(hc), type = "cladogram", cex = 0.8,
edge.color = "steelblue", edge.width = 2, edge.lty = 2,
tip.color = "steelblue")
#Take median for each continent for each column
grouped_by_con <- aggregate(. ~ continent, data=data_clus, FUN=median)
#transpose
test <- t(grouped_by_con)
#Make a distance matrix
distance <- 1-cor(test)
class(distance)
distance <- as.dist(distance)
#Make cluster
#1
hc <- hclust(distance, "single")
plot(hc, main="Distance between Continents")
#2
library(ape)
plot(as.phylo(hc), type = "unrooted", cex = 1,
no.margin = TRUE)
#3
plot(as.phylo(hc), type = "cladogram", cex = 0.8,
edge.color = "steelblue", edge.width = 2, edge.lty = 2,
tip.color = "steelblue")
# More: http://www.sthda.com/english/wiki/beautiful-dendrogram-visualizations-in-r-5-must-known-methods-unsupervised-machine-learning
# More: http://www.sthda.com/english/wiki/beautiful-dendrogram-visualizations-in-r-5-must-known-methods-unsupervised-machine-learning
## Interesting is Oceania & Africa are together!!
plot(hc, main="Distance between Continents")
plot(rev(hc$))
plot(rev(hc$height))
cutree(hc,3)
cutree(hc,4)
cutree(hc,2)
cutree(hc,3)
