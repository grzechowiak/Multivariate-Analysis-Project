#GINI
gini <- select(gini, "country", "2016")
colnames(gini) <- c("country", "gini")
#Merge all
data <- merge(population_tot, murder_total_deaths, by="country", all = TRUE)
data <- merge(data, armed_forces_personnel_total , by="country", all = TRUE)
data <- merge(data, cell_phones , by="country", all = TRUE)
data <- merge(data, children_per_woman , by="country", all = TRUE)
data <- merge(data, life_expectancy_years , by="country", all = TRUE)
data <- merge(data, suicide_total_deaths , by="country", all = TRUE)
data <- merge(data, urban_population , by="country", all = TRUE)
data <- merge(data, sex_ratio , by="country", all = TRUE)
data <- merge(data, corruption , by="country", all = TRUE)
data <- merge(data, internet_users , by="country", all = TRUE)
data <- merge(data, child_mortality, by="country", all = TRUE)
data <- merge(data, income_per_person, by="country", all = TRUE)
data <- merge(data, investments_per_ofGDP, by= "country", all=TRUE)
data <- merge(data, gini, by="country", all=TRUE)
########################
######NA'S
#Check numbers of NA's
summary(data)
###### CORRELATIONS
# simple matrix correlation plot
plot(data[,-1])
# more fency correlation matrix plot
pairs(data[,-1],
panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "red")
}, pch = ".", cex = 1.5)
# super fency correlation
#install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(data[,-1], histogram=TRUE, pch=42)
# correlation matrix (numbers)
cor(data[,-1], use = "complete.obs")
cor(data[,-1], use = "pairwise.complete.obs")
#Check PC
data_test <- na.omit(data)
data
a <- princomp(data_test[,-1], cor=T)
summary(a, loadings=T)
# HEre is a test where I deleted few columns.
# See how PC increases/descreases while deleting less correlated columns
## TEST PCA WITHOUT FEW COLUMNS
test <- data[,-c(2,4,9,10,15)] ## optioaly delete murder_pp
test2 <- na.omit(test)
b <- princomp(test2[,-1], cor=T)
summary(b, loadings=T)
chart.Correlation(test[,-1], histogram=TRUE, pch=42)
# Create new a column continent and divide countires by continent
library(countrycode)
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
# Just rearanage columns to get continent before country
data <- data[,c(ncol(data),seq(1,ncol(data)-1,by=1))]
#The function above did not divide coutries into America North, Central, South so I did this by hand
subset(data, continent=='Americas') %>% select(country) %>% as.list()
America_North <- c("Mexico","United States", "Canada")
# America_Central <- c("St. Vincent and the Grenadines","Nicaragua",
#                      "Honduras","Guatemala","Cuba","Bahamas","Trinidad and Tobago",
#                      "St. Lucia","Haiti","Grenada","Dominican Republic","Costa Rica",
#                      "Belize","Antigua and Barbuda","Barbados", "Dominica", "El Salvador",
#                      "Jamaica", "Panama", "St. Kitts and Nevis")
America_South <- c("Peru","Ecuador","Chile","Bolivia","Venezuela","Paraguay","Brazil",
"Colombia",  "Guyana", "Suriname", "Uruguay", "Argentina")
#Change the values from "Americas" into more specific part of America
for (i in 1:nrow(data)){
if(data$continent[i] == "Americas"){
if(data$country[i] %in% America_North){
data$continent[i] <- 'North America'}
if(data$country[i] %in% America_South){
data$continent[i] <- 'South America'
}
else {data$continent[i] <- 'Central America'}
}
}
View(data)
#Read Libraries
library(readr)
library(readxl)
library(dplyr)
#Read data
population_tot <- read_csv("data/population_total.csv")
murder_total_deaths <- read_csv("data/murder_total_deaths edited.csv")
armed_forces_personnel_total <- read_csv("data/armed_forces_personnel_total.csv")
cell_phones <- read_csv("data/cell_phones_per_100_people.csv")
children_per_woman <- read_csv("data/children_per_woman_total_fertility.csv")
life_expectancy_years <- read_csv("data/life_expectancy_years.csv")
suicide_total_deaths <- read_csv("data/suicide_total_deaths.csv")
urban_population <- read_csv("data/urban_population.csv")
sex_ratio <- read_csv("data/sex_ratio_all_age_groups.csv")
corruption <- read_csv("data/corruption_perception_index_cpi.csv")
internet_users <- read_csv("data/internet_users.csv")
internet_users <- read_csv("data/internet_users.csv")
child_mortality <- read_csv("data/child_mortality_0_5_year_olds_dying_per_1000_born.csv")
income_per_person <- read_csv("data/income_per_person_gdppercapita_ppp_inflation_adjusted.csv")
investments_per_ofGDP <- read_csv("data/investments_percent_of_gdp.csv")
gini <- read_csv("data/gini.csv")
#####DATA#####
#POPULATION TOTAL
population_tot <- select(population_tot, "country", "2016")
colnames(population_tot) <- c("country", "pop_total")
#MURDER per person (from total)
murder_total_deaths <- select(murder_total_deaths, "Country", "2016")
colnames(murder_total_deaths) <- c("country", "murder_total")
murder_total_deaths <- merge(population_tot, murder_total_deaths , by="country", all = TRUE)
murder_total_deaths$divided <- murder_total_deaths$murder_total/murder_total_deaths$pop_total
murder_total_deaths <- select(murder_total_deaths,"country",'divided')
colnames(murder_total_deaths) <- c("country","murder_pp")
#ARMED per person (from total)
armed_forces_personnel_total <- select(armed_forces_personnel_total, "country", "2016")
colnames(armed_forces_personnel_total) <- c("country", "armed_total")
armed_forces_personnel_total <- merge(population_tot, armed_forces_personnel_total , by="country", all = TRUE)
armed_forces_personnel_total$divided <- armed_forces_personnel_total$armed_total/armed_forces_personnel_total$pop_total
armed_forces_personnel_total <- select(armed_forces_personnel_total,"country",'divided')
colnames(armed_forces_personnel_total) <- c("country","armed_pp")
#CELL PHONES per 100
cell_phones <- select(cell_phones, "country", "2016")
colnames(cell_phones) <- c("country", "phones_p100")
#URBAN POPULATION
urban_population<- select(urban_population, "country", "2016")
colnames(urban_population) <- c("country", "urban_pop_tot")
#CHILDREN PER WOMAN
children_per_woman <- select(children_per_woman, "country", "2016")
colnames(children_per_woman) <- c("country", "children_p_woman")
#LIFE EXPECTANCY
life_expectancy_years <- select(life_expectancy_years, "country", "2016")
colnames(life_expectancy_years) <- c("country", "life_exp_yrs")
#SUICIDE DEATHS TOTAL
suicide_total_deaths <- select(suicide_total_deaths, "country", "2016")
colnames(suicide_total_deaths) <- c("country", "suicide_total")
suicide_total_deaths <- merge(population_tot, suicide_total_deaths , by="country", all = TRUE)
suicide_total_deaths$divided <- suicide_total_deaths$suicide_total/suicide_total_deaths$pop_total
suicide_total_deaths <- select(suicide_total_deaths,"country",'divided')
colnames(suicide_total_deaths) <- c("country","suicide_pp")
#CORRUPTION
corruption <- select(corruption, "country", "2016")
colnames(corruption) <- c("country", "corruption_CPI")
#INTERNET USERS (%of pop)
internet_users <- select(internet_users, "country", "2016")
colnames(internet_users) <- c("country", "internet_%of_pop")
#SEX RATIO IT IS 2015!!!!!! #man/women per 100
sex_ratio <- select(sex_ratio, "country", "2015")
colnames(sex_ratio) <- c("country", "sex_ratio_p100")
#CHILDREN MORTALITY
# 0-5 year olds dying per 1000 born
child_mortality <- select(child_mortality, "country", "2016")
colnames(child_mortality) <- c("country", "child_mort_p1000")
#INCOME PER PERSON
income_per_person <- select(income_per_person, "country", "2016")
colnames(income_per_person) <- c("country", "income_per_person")
#INVESTMENT AS A % OF DGP
investments_per_ofGDP <- select(investments_per_ofGDP, "country", "2016")
colnames(investments_per_ofGDP) <- c("country", "investments_per_ofGDP")
#GINI
gini <- select(gini, "country", "2016")
colnames(gini) <- c("country", "gini")
#Merge all
data <- merge(population_tot, murder_total_deaths, by="country", all = TRUE)
data <- merge(data, armed_forces_personnel_total , by="country", all = TRUE)
data <- merge(data, cell_phones , by="country", all = TRUE)
data <- merge(data, children_per_woman , by="country", all = TRUE)
data <- merge(data, life_expectancy_years , by="country", all = TRUE)
data <- merge(data, suicide_total_deaths , by="country", all = TRUE)
data <- merge(data, urban_population , by="country", all = TRUE)
data <- merge(data, sex_ratio , by="country", all = TRUE)
data <- merge(data, corruption , by="country", all = TRUE)
data <- merge(data, internet_users , by="country", all = TRUE)
data <- merge(data, child_mortality, by="country", all = TRUE)
data <- merge(data, income_per_person, by="country", all = TRUE)
data <- merge(data, investments_per_ofGDP, by= "country", all=TRUE)
data <- merge(data, gini, by="country", all=TRUE)
########################
######NA'S
#Check numbers of NA's
summary(data)
###### CORRELATIONS
# simple matrix correlation plot
plot(data[,-1])
# more fency correlation matrix plot
pairs(data[,-1],
panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "red")
}, pch = ".", cex = 1.5)
# super fency correlation
#install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(data[,-1], histogram=TRUE, pch=42)
# correlation matrix (numbers)
cor(data[,-1], use = "complete.obs")
cor(data[,-1], use = "pairwise.complete.obs")
#Check PC
data_test <- na.omit(data)
data
a <- princomp(data_test[,-1], cor=T)
summary(a, loadings=T)
# HEre is a test where I deleted few columns.
# See how PC increases/descreases while deleting less correlated columns
## TEST PCA WITHOUT FEW COLUMNS
test <- data[,-c(2,4,9,10,15)] ## optioaly delete murder_pp
test2 <- na.omit(test)
b <- princomp(test2[,-1], cor=T)
summary(b, loadings=T)
chart.Correlation(test[,-1], histogram=TRUE, pch=42)
# Create new a column continent and divide countires by continent
library(countrycode)
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
# Just rearanage columns to get continent before country
data <- data[,c(ncol(data),seq(1,ncol(data)-1,by=1))]
#The function above did not divide coutries into America North, Central, South so I did this by hand
subset(data, continent=='Americas') %>% select(country) %>% as.list()
America_North <- c("Mexico","United States", "Canada")
# America_Central <- c("St. Vincent and the Grenadines","Nicaragua",
#                      "Honduras","Guatemala","Cuba","Bahamas","Trinidad and Tobago",
#                      "St. Lucia","Haiti","Grenada","Dominican Republic","Costa Rica",
#                      "Belize","Antigua and Barbuda","Barbados", "Dominica", "El Salvador",
#                      "Jamaica", "Panama", "St. Kitts and Nevis")
America_South <- c("Peru","Ecuador","Chile","Bolivia","Venezuela","Paraguay","Brazil",
"Colombia",  "Guyana", "Suriname", "Uruguay", "Argentina")
#Change the values from "Americas" into more specific part of America
for (i in 1:nrow(data)){
if(data$continent[i] == "Americas"){
if(data$country[i] %in% America_North){
data$continent[i] <- 'North America'}
if(data$country[i] %in% America_South){
data$continent[i] <- 'South America'
}
}
else {data$continent[i] <- 'Central America'}
}
View(data)
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
View(data)
#Change the values from "Americas" into more specific part of America
for (i in 1:nrow(data)){
if(data$continent[i] == "Americas"){
if(data$country[i] %in% America_North){
data$continent[i] <- 'North America'}
if(data$country[i] %in% America_South){
data$continent[i] <- 'South America'
}
else {data$continent[i] <- 'Central America'}
}
}
View(data)
View(data)
data$country[111] %in% America_North
View(data)
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
for (i in 1:nrow(data)){
if(data$continent[i] == "Americas"){
if(data$country[i] %in% America_North){
data$continent[i] <- 'North America'
}
if(data$country[i] %in% America_South){
data$continent[i] <- 'South America'
}
else {data$continent[i] <- 'Central America'}
}
}
View(data)
America_North
America_South
America_North <- c("Canada","United States","Mexico")
America_North
for (i in 1:nrow(data)){
ifelse(data$continent[i] == "Americas",
ifelse(data$country[i] %in% America_North,data$continent[i] <- 'North America',
ifelse(data$country[i] %in% America_South,data$continent[i] <- 'South America',
data$continent[i] <- 'Central America')), no)
}
for (i in 1:nrow(data)){
ifelse(data$continent[i] == "Americas",
ifelse(data$country[i] %in% America_North,data$continent[i] <- 'North America',
ifelse(data$country[i] %in% America_South,data$continent[i] <- 'South America',
data$continent[i] <- 'Central America')), )
}
for (i in 1:nrow(data)){
ifelse(data$continent[i] == "Americas",
ifelse(data$country[i] %in% America_North,data$continent[i] <- 'North America',
ifelse(data$country[i] %in% America_South,data$continent[i] <- 'South America',
data$continent[i] <- 'Central America')), data$country[i])
}
View(data)
ifelse(data$continent == "Americas",
ifelse(data$country %in% America_North,data$continent <- 'North America',
ifelse(data$country %in% America_South,data$continent <- 'South America',
data$continent <- 'Central America')), data$country)
View(data)
apply(M, 1, function(x)
ifelse(data$continent == "Americas",
ifelse(data$country %in% America_North,data$continent <- 'North America',
ifelse(data$country %in% America_South,data$continent <- 'South America',
data$continent <- 'Central America')), data$country))
apply(data, 1, function(x)
ifelse(data$continent == "Americas",
ifelse(data$country %in% America_North,data$continent <- 'North America',
ifelse(data$country %in% America_South,data$continent <- 'South America',
data$continent <- 'Central America')), data$country))
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
apply(data, 1, function(x)
ifelse(data$continent == "Americas",
ifelse(data$country %in% America_North,data$continent <- 'North America',
ifelse(data$country %in% America_South,data$continent <- 'South America',
data$continent <- 'Central America')), data$country))
View(data)
apply(data, 1, function()
ifelse(data$continent == "Americas",
ifelse(data$country %in% America_North,data$continent <- 'North America',
ifelse(data$country %in% America_South,data$continent <- 'South America',
data$continent <- 'Central America')), data$country))
apply(data, 1, function(continent)
ifelse(data$continent == "Americas",
ifelse(data$country %in% America_North,data$continent <- 'North America',
ifelse(data$country %in% America_South,data$continent <- 'South America',
data$continent <- 'Central America')), data$country))
View(data)
apply(data, 1, function(country)
ifelse(data$continent == "Americas",
ifelse(data$country %in% America_North,data$continent <- 'North America',
ifelse(data$country %in% America_South,data$continent <- 'South America',
data$continent <- 'Central America')), data$country))
View(data)
apply(data, 1, function(x)
ifelse(data$continent == "Americas",
ifelse(data$country %in% America_North,data$continent <- 'North America',
ifelse(data$country %in% America_South,data$continent <- 'South America',
data$continent <- 'Central America')), data$country))
for (i in 1:nrow(data)){
ifelse(data$continent[i] == "Americas",
ifelse(data$country[i] %in% America_North,data$continent[i] <- 'North America',
ifelse(data$country[i] %in% America_South,data$continent[i] <- 'South America',
data$continent[i] <- 'Central America')), data$country[i])
}
View(data)
#Read Libraries
library(readr)
library(readxl)
library(dplyr)
#Read data
population_tot <- read_csv("data/population_total.csv")
murder_total_deaths <- read_csv("data/murder_total_deaths edited.csv")
armed_forces_personnel_total <- read_csv("data/armed_forces_personnel_total.csv")
cell_phones <- read_csv("data/cell_phones_per_100_people.csv")
children_per_woman <- read_csv("data/children_per_woman_total_fertility.csv")
life_expectancy_years <- read_csv("data/life_expectancy_years.csv")
suicide_total_deaths <- read_csv("data/suicide_total_deaths.csv")
urban_population <- read_csv("data/urban_population.csv")
sex_ratio <- read_csv("data/sex_ratio_all_age_groups.csv")
corruption <- read_csv("data/corruption_perception_index_cpi.csv")
internet_users <- read_csv("data/internet_users.csv")
internet_users <- read_csv("data/internet_users.csv")
child_mortality <- read_csv("data/child_mortality_0_5_year_olds_dying_per_1000_born.csv")
income_per_person <- read_csv("data/income_per_person_gdppercapita_ppp_inflation_adjusted.csv")
investments_per_ofGDP <- read_csv("data/investments_percent_of_gdp.csv")
gini <- read_csv("data/gini.csv")
#####DATA#####
#POPULATION TOTAL
population_tot <- select(population_tot, "country", "2016")
colnames(population_tot) <- c("country", "pop_total")
#MURDER per person (from total)
murder_total_deaths <- select(murder_total_deaths, "Country", "2016")
colnames(murder_total_deaths) <- c("country", "murder_total")
murder_total_deaths <- merge(population_tot, murder_total_deaths , by="country", all = TRUE)
murder_total_deaths$divided <- murder_total_deaths$murder_total/murder_total_deaths$pop_total
murder_total_deaths <- select(murder_total_deaths,"country",'divided')
colnames(murder_total_deaths) <- c("country","murder_pp")
#ARMED per person (from total)
armed_forces_personnel_total <- select(armed_forces_personnel_total, "country", "2016")
colnames(armed_forces_personnel_total) <- c("country", "armed_total")
armed_forces_personnel_total <- merge(population_tot, armed_forces_personnel_total , by="country", all = TRUE)
armed_forces_personnel_total$divided <- armed_forces_personnel_total$armed_total/armed_forces_personnel_total$pop_total
armed_forces_personnel_total <- select(armed_forces_personnel_total,"country",'divided')
colnames(armed_forces_personnel_total) <- c("country","armed_pp")
#CELL PHONES per 100
cell_phones <- select(cell_phones, "country", "2016")
colnames(cell_phones) <- c("country", "phones_p100")
#URBAN POPULATION
urban_population<- select(urban_population, "country", "2016")
colnames(urban_population) <- c("country", "urban_pop_tot")
#CHILDREN PER WOMAN
children_per_woman <- select(children_per_woman, "country", "2016")
colnames(children_per_woman) <- c("country", "children_p_woman")
#LIFE EXPECTANCY
life_expectancy_years <- select(life_expectancy_years, "country", "2016")
colnames(life_expectancy_years) <- c("country", "life_exp_yrs")
#SUICIDE DEATHS TOTAL
suicide_total_deaths <- select(suicide_total_deaths, "country", "2016")
colnames(suicide_total_deaths) <- c("country", "suicide_total")
suicide_total_deaths <- merge(population_tot, suicide_total_deaths , by="country", all = TRUE)
suicide_total_deaths$divided <- suicide_total_deaths$suicide_total/suicide_total_deaths$pop_total
suicide_total_deaths <- select(suicide_total_deaths,"country",'divided')
colnames(suicide_total_deaths) <- c("country","suicide_pp")
#CORRUPTION
corruption <- select(corruption, "country", "2016")
colnames(corruption) <- c("country", "corruption_CPI")
#INTERNET USERS (%of pop)
internet_users <- select(internet_users, "country", "2016")
colnames(internet_users) <- c("country", "internet_%of_pop")
#SEX RATIO IT IS 2015!!!!!! #man/women per 100
sex_ratio <- select(sex_ratio, "country", "2015")
colnames(sex_ratio) <- c("country", "sex_ratio_p100")
#CHILDREN MORTALITY
# 0-5 year olds dying per 1000 born
child_mortality <- select(child_mortality, "country", "2016")
colnames(child_mortality) <- c("country", "child_mort_p1000")
#INCOME PER PERSON
income_per_person <- select(income_per_person, "country", "2016")
colnames(income_per_person) <- c("country", "income_per_person")
#INVESTMENT AS A % OF DGP
investments_per_ofGDP <- select(investments_per_ofGDP, "country", "2016")
colnames(investments_per_ofGDP) <- c("country", "investments_per_ofGDP")
#GINI
gini <- select(gini, "country", "2016")
colnames(gini) <- c("country", "gini")
#Merge all
data <- merge(population_tot, murder_total_deaths, by="country", all = TRUE)
data <- merge(data, armed_forces_personnel_total , by="country", all = TRUE)
data <- merge(data, cell_phones , by="country", all = TRUE)
data <- merge(data, children_per_woman , by="country", all = TRUE)
data <- merge(data, life_expectancy_years , by="country", all = TRUE)
data <- merge(data, suicide_total_deaths , by="country", all = TRUE)
data <- merge(data, urban_population , by="country", all = TRUE)
data <- merge(data, sex_ratio , by="country", all = TRUE)
data <- merge(data, corruption , by="country", all = TRUE)
data <- merge(data, internet_users , by="country", all = TRUE)
data <- merge(data, child_mortality, by="country", all = TRUE)
data <- merge(data, income_per_person, by="country", all = TRUE)
data <- merge(data, investments_per_ofGDP, by= "country", all=TRUE)
data <- merge(data, gini, by="country", all=TRUE)
########################
######NA'S
#Check numbers of NA's
summary(data)
###### CORRELATIONS
# simple matrix correlation plot
plot(data[,-1])
# more fency correlation matrix plot
pairs(data[,-1],
panel = function (x, y, ...) {
points(x, y, ...)
abline(lm(y ~ x), col = "red")
}, pch = ".", cex = 1.5)
# super fency correlation
#install.packages("PerformanceAnalytics")
library("PerformanceAnalytics")
chart.Correlation(data[,-1], histogram=TRUE, pch=42)
# correlation matrix (numbers)
cor(data[,-1], use = "complete.obs")
cor(data[,-1], use = "pairwise.complete.obs")
#Check PC
data_test <- na.omit(data)
data
a <- princomp(data_test[,-1], cor=T)
summary(a, loadings=T)
# HEre is a test where I deleted few columns.
# See how PC increases/descreases while deleting less correlated columns
## TEST PCA WITHOUT FEW COLUMNS
test <- data[,-c(2,4,9,10,15)] ## optioaly delete murder_pp
test2 <- na.omit(test)
b <- princomp(test2[,-1], cor=T)
summary(b, loadings=T)
chart.Correlation(test[,-1], histogram=TRUE, pch=42)
# Create new a column continent and divide countires by continent
library(countrycode)
data$continent <- countrycode(sourcevar = data[, "country"],
origin = "country.name",
destination = "continent")
# Just rearanage columns to get continent before country
data <- data[,c(ncol(data),seq(1,ncol(data)-1,by=1))]
#The function above did not divide coutries into America North, Central, South so I did this by hand
subset(data, continent=='Americas') %>% select(country) %>% as.list()
America_North <- c("Canada","United States","Mexico")
# America_Central <- c("St. Vincent and the Grenadines","Nicaragua",
#                      "Honduras","Guatemala","Cuba","Bahamas","Trinidad and Tobago",
#                      "St. Lucia","Haiti","Grenada","Dominican Republic","Costa Rica",
#                      "Belize","Antigua and Barbuda","Barbados", "Dominica", "El Salvador",
#                      "Jamaica", "Panama", "St. Kitts and Nevis")
America_South <- c("Peru","Ecuador","Chile","Bolivia","Venezuela","Paraguay","Brazil",
"Colombia",  "Guyana", "Suriname", "Uruguay", "Argentina")
#Change the values from "Americas" into more specific part of America
# for (i in 1:nrow(data)){
#   if(data$continent[i] == "Americas"){
#     if(data$country[i] %in% America_North){
#       data$continent[i] <- 'North America'
#     }
#       if(data$country[i] %in% America_South){
#         data$continent[i] <- 'South America'
#       }
#
#       else {data$continent[i] <- 'Central America'}
#     }
#   }
for (i in 1:nrow(data)){
ifelse(data$continent[i] == "Americas",
ifelse(data$country[i] %in% America_North,data$continent[i] <- 'North America',
ifelse(data$country[i] %in% America_South,data$continent[i] <- 'South America',
data$continent[i] <- 'Central America')), data$country[i])
}
View(data)
